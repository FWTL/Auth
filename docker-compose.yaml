#docker-compose -p fwtl -f "docker-compose.yaml" up -d --build
#docker-compose -p fwtl -f "docker-compose.yaml" -f "docker-compose.local.yaml" up -d --build
#docker cp .env.docker FWTL-telegram-api-server:/app/.env.docker
version: "3"

services:
  seq:
    image: datalust/seq:latest
    container_name: "FWTL-seq"
    ports:
      - "5341:80"
    environment:
      ACCEPT_EULA: "Y"
    volumes:
      - FWTL-data:/data
    networks:
      - backend
  sql:
    image: mcr.microsoft.com/mssql/server:2017-latest
    container_name: "FWTL-sql"
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "!QAZ2wsx"
    volumes:
      - FWTL-sql-data:/var/opt/mssql
    networks:
      - backend
  telegram-api-server:
    image: xtrime/telegram-api-server:latest
    container_name: FWTL-telegram-api-server
    restart: unless-stopped
    ports:
      - "127.0.0.1:9503:9503"
    volumes:
      - "FWTL-sessions:/app/sessions"
      - ./.env.docker:/app/.env.docker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: "FWTL-rabbitmq"
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
      RABBITMQ_DEFAULT_VHOST: "/"
    volumes:
      - FWTL-data:/var/lib/rabbitmq
    networks:
      - backend
  redis:
    image: redis:alpine
    container_name: "FWTL-redis"
    ports:
      - "6379:6379"
    volumes:
      - FWTL-data:/var/lib/redis/data
    networks:
      - backend
  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: "FWTL-redisinsight"
    ports:
      - "8005:8001"
    networks:
      - backend

volumes:
  FWTL-sql-data:
  FWTL-data:
  FWTL-sessions:

networks:
  backend:
  frontend:
